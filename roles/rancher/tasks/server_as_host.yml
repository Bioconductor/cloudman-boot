---
- name: Install httplib2
  pip:
    name: httplib2
    state: latest

- name: Return the registration token URL of Rancher server
  uri:
    method: POST
    status_code: 201
   url: "http://localhost:{{ rancher_port }}/v1/registrationtokens?projectId={{ project_id.stdout }}"
    return_content: yes
    user: "{{ api_user }}"
    password: "{{ api_password }}"
  register: rancher_token_url

- name: Return the registration URL of Rancher server
  uri:
    method: GET
    url: "{{ rancher_token_url.json['links']['self'] }}"
    return_content: yes
    user: "{{ api_user }}"
    password: "{{ api_password }}"
  register: rancher_token

- name: Check if the rancher-agent is running
  command: docker ps -a
  register: containers

- name: Register Rancher server as a host
  docker_container:
      name: "{{ rancher_name }}Host"
      image: "rancher/agent:{{ rancher_agent_version }}"
      privileged: yes
      detach: True
      # auto_remove: yes  # Does not work: this option requires 'docker' Python module, other tasks require 'docker-py' and they're not compatible
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /var/lib/rancher:/var/lib/rancher
      command: "http://{{ rancher_server }}:{{ rancher_port }}/v1/scripts/{{ rancher_token.json['registrationUrl'].split('/')[-1] }}"
      env:
        CATTLE_AGENT_IP: "{{ rancher_server }}"
      state: started
  when: "{{ 'rancher-agent' not in containers.stdout }}"
.
# An alternative host registration task - requires use of public server address
# in the "Return the registration token URL of Rancher server" task
# - name: Register Rancher server as a host
#   docker_container:
#       name: "{{ rancher_name }}Host"
#       image: "{{ rancher_token.json['image'] }}"
#       privileged: yes
#       detach: True
#       volumes:
#         - /var/run/docker.sock:/var/run/docker.sock
#         - /var/lib/rancher:/var/lib/rancher
#       command: "{{ rancher_token.json['registrationUrl'] }}"
#       state: started
#   when: "{{ 'rancher-agent' not in containers.stdout }}"


- name: Create CSI driver namespace
  command: >
    /usr/local/bin/kubectl create namespace csi-drivers
  ignore_errors: true

- name: Helm install nfs-provisioner
  command: >
    /usr/local/bin/helm upgrade --install nfs-provisioner stable/nfs-server-provisioner
    --namespace csi-drivers
    --set persistence.enabled=true
    --set persistence.storageClass="ebs"
    --set persistence.size="{{ cm_initial_storage_size }}"
    --set storageClass.create=true
    --set storageClass.reclaimPolicy="Delete"
    --set storageClass.allowVolumeExpansion=true

- name: Helm install RClone for AWS S3
  command: >
    /usr/local/bin/helm upgrade --install rclone-csi galaxyproject/csi-rclone
    --namespace csi-drivers
    --set storageClass.name="rclone"
    --set params.remote="s3"
    --set params.remotePath="{{ cluster_hostname | replace('.', '-') }}-gvl-data"
    --set params.s3-provider="aws"
    --set params.s3-endpoint="https://s3.{{ cm_initial_cluster_data.cloud_config.target.target_zone.region.region_id }}.amazonaws.com"
    --set params.s3-access-key-id="{{ cm_initial_cluster_data.cloud_config.credentials.aws_access_key }}"
    --set params.s3-secret-access-key="{{ cm_initial_cluster_data.cloud_config.credentials.aws_secret_key }}"
  when: kube_cloud_provider == "aws"
  ignore_errors: true

- name: Helm install RClone for OpenStack Swift
  command: >
    /usr/local/bin/helm upgrade --install rclone-csi galaxyproject/csi-rclone
    --namespace csi-drivers
    --set storageClass.name="rclone"
    --set params.remote="swift"
    --set params.remotePath="{{ cluster_hostname | replace('.', '-') }}-gvl-data"
    --set params.swift-user="{{ cm_initial_cluster_data.cloud_config.credentials.os_username }}"
    --set params.swift-key="{{ cm_initial_cluster_data.cloud_config.credentials.os_password }}"
    --set params.swift-auth="{{ cm_initial_cluster_data.cloud_config.target.target_zone.cloud.auth_url }}"
    --set params.swift-domain="{{ cm_initial_cluster_data.cloud_config.credentials.os_user_domain_name }}"
    --set params.swift-tenant="{{ cm_initial_cluster_data.cloud_config.credentials.os_project_name }}"
    --set params.swift-region="{{ cm_initial_cluster_data.cloud_config.target.target_zone.region.name }}"
    --set params.swift-tenant-domain="{{ cm_initial_cluster_data.cloud_config.credentials.os_project_domain_name }}"
  when: kube_cloud_provider == "openstack"
  ignore_errors: true

- name: Helm install galaxy-cvmfs-csi
  command: >
    /usr/local/bin/helm upgrade --install gxy-cvmfs galaxyproject/galaxy-cvmfs-csi
    --namespace csi-drivers
  ignore_errors: true
